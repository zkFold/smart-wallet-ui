components:
  schemas:
    BuildOut:
      description: Output to be created. Note that our balancer may add additional
        lovelace to satisfy minimum lovelace requirement for this output.
      properties:
        address:
          $ref: '#/components/schemas/GYAddress'
        datum:
          items:
          - $ref: '#/components/schemas/GYDatum'
          - type: boolean
          maxItems: 2
          minItems: 2
          type: array
        value:
          $ref: '#/components/schemas/GYValue'
      required:
      - address
      - value
      type: object
    ByteStringFromHex:
      description: Bytes encoded in hex.
      format: hex
      type: string
    CreateWalletParameters:
      description: Initialize zk smart wallet. If "fund_address" is not provided,
        we use address of the wallet (which is to be initialized here). If "collateral"
        is not provided, we use suitable collateral from "fund_address".
      properties:
        collateral:
          $ref: '#/components/schemas/GYTxOutRef'
        email:
          $ref: '#/components/schemas/Email'
        fund_address:
          $ref: '#/components/schemas/GYAddressBech32'
        jwt:
          $ref: '#/components/schemas/JWT'
        payment_key_hash:
          $ref: '#/components/schemas/GYKeyHash'
        proof_bytes:
          $ref: '#/components/schemas/ZKProofBytes'
      required:
      - email
      - jwt
      - payment_key_hash
      - proof_bytes
      type: object
    CreateWalletResponse:
      description: Transaction which would initialize user's wallet.
      properties:
        address:
          $ref: '#/components/schemas/GYAddressBech32'
        transaction:
          $ref: '#/components/schemas/GYTx'
      required:
      - address
      - transaction
      type: object
    Email:
      description: User's email address.
      example: zkfold@gmail.com
      type: string
    GYAddress:
      description: An address, serialised as CBOR.
      example: 00e1cbb80db89e292269aeb93ec15eb963dda5176b66949fe1c2a6a38d1b930e9f7add78a174a21000e989ff551366dcd127028cb2aa39f616
      format: cbor hex
      maxLength: 114
      minLength: 114
      type: string
    GYAddressBech32:
      description: An address, serialised as Bech32.
      example: addr_test1qrsuhwqdhz0zjgnf46unas27h93amfghddnff8lpc2n28rgmjv8f77ka0zshfgssqr5cnl64zdnde5f8q2xt923e7ctqu49mg5
      format: bech32
      type: string
    GYDatum:
      description: JSON representation of datum
    GYKeyHash:
      description: The hash of a key with role as GYKeyRolePayment
      example: e1cbb80db89e292269aeb93ec15eb963dda5176b66949fe1c2a6a38d
      format: hex
      maxLength: 56
      minLength: 56
      type: string
    GYNatural:
      description: A natural number which is a non-negative integer. Minimum value
        is 0.
      example: '123456789123456789123456789123456789123456789'
      type: string
    GYTx:
      description: Transaction cbor hex string
      example: 84a70082825820975e4c7f8d7937f8102e500714feb3f014c8766fcf287a11c10c686154fcb27501825820c887cba672004607a0f60ab28091d5c24860dbefb92b1a8776272d752846574f000d818258207a67cd033169e330c9ae9b8d0ef8b71de9eb74bbc8f3f6be90446dab7d1e8bfd00018282583900fd040c7a10744b79e5c80ec912a05dbdb3009e372b7f4b0f026d16b0c663651ffc046068455d2994564ba9d4b3e9b458ad8ab5232aebbf401a1abac7d882583900fd040c7a10744b79e5c80ec912a05dbdb3009e372b7f4b0f026d16b0c663651ffc046068455d2994564ba9d4b3e9b458ad8ab5232aebbf40821a0017ad4aa2581ca6bb5fd825455e7c69bdaa9d3a6dda9bcbe9b570bc79bd55fa50889ba1466e69636b656c1911d7581cb17cb47f51d6744ad05fb937a762848ad61674f8aebbaec67be0bb6fa14853696c6c69636f6e190258021a00072f3c0e8009a1581cb17cb47f51d6744ad05fb937a762848ad61674f8aebbaec67be0bb6fa14853696c6c69636f6e1902580b5820291b4e4c5f189cb896674e02e354028915b11889687c53d9cf4c1c710ff5e4aea203815908d45908d101000033332332232332232323232323232323232323232323232323232222223232323235500222222222225335333553024120013232123300122333500522002002001002350012200112330012253350021001102d02c25335325335333573466e3cd400488008d404c880080b40b04ccd5cd19b873500122001350132200102d02c102c3500122002102b102c00a132635335738921115554784f206e6f7420636f6e73756d65640002302115335333573466e3c048d5402c880080ac0a854cd4ccd5cd19b8701335500b2200102b02a10231326353357389210c77726f6e6720616d6f756e740002302113263533573892010b77726f6e6720746f6b656e00023021135500122222222225335330245027007162213500222253350041335502d00200122161353333573466e1cd55cea8012400046644246600200600464646464646464646464646666ae68cdc39aab9d500a480008cccccccccc888888888848cccccccccc00402c02802402001c01801401000c008cd40548c8c8cccd5cd19b8735573aa0049000119910919800801801180f1aba15002301a357426ae8940088c98d4cd5ce01381401301289aab9e5001137540026ae854028cd4054058d5d0a804999aa80c3ae501735742a010666aa030eb9405cd5d0a80399a80a80f1aba15006335015335502101f75a6ae854014c8c8c8cccd5cd19b8735573aa00490001199109198008018011919191999ab9a3370e6aae754009200023322123300100300233502475a6ae854008c094d5d09aba2500223263533573805605805405226aae7940044dd50009aba150023232323333573466e1cd55cea8012400046644246600200600466a048eb4d5d0a80118129aba135744a004464c6a66ae700ac0b00a80a44d55cf280089baa001357426ae8940088c98d4cd5ce01381401301289aab9e5001137540026ae854010cd4055d71aba15003335015335502175c40026ae854008c06cd5d09aba2500223263533573804604804404226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226aae7940044dd50009aba150023232323333573466e1d400520062321222230040053016357426aae79400c8cccd5cd19b875002480108c848888c008014c060d5d09aab9e500423333573466e1d400d20022321222230010053014357426aae7940148cccd5cd19b875004480008c848888c00c014dd71aba135573ca00c464c6a66ae7007807c07407006c0680644d55cea80089baa001357426ae8940088c98d4cd5ce00b80c00b00a9100109aab9e5001137540022464460046eb0004c8004d5406488cccd55cf8009280c119a80b98021aba100230033574400402446464646666ae68cdc39aab9d5003480008ccc88848ccc00401000c008c8c8c8cccd5cd19b8735573aa004900011991091980080180118099aba1500233500c012357426ae8940088c98d4cd5ce00b00b80a80a09aab9e5001137540026ae85400cccd5401dd728031aba1500233500875c6ae84d5d1280111931a99ab9c012013011010135744a00226aae7940044dd5000899aa800bae75a224464460046eac004c8004d5405c88c8cccd55cf8011280b919a80b19aa80c18031aab9d5002300535573ca00460086ae8800c0444d5d080089119191999ab9a3370ea0029000119091180100198029aba135573ca00646666ae68cdc3a801240044244002464c6a66ae7004004403c0380344d55cea80089baa001232323333573466e1cd55cea80124000466442466002006004600a6ae854008dd69aba135744a004464c6a66ae7003403803002c4d55cf280089baa0012323333573466e1cd55cea800a400046eb8d5d09aab9e500223263533573801601801401226ea8004488c8c8cccd5cd19b87500148010848880048cccd5cd19b875002480088c84888c00c010c018d5d09aab9e500423333573466e1d400d20002122200223263533573801c01e01a01801601426aae7540044dd50009191999ab9a3370ea0029001100911999ab9a3370ea0049000100911931a99ab9c00a00b009008007135573a6ea80048c8c8c8c8c8cccd5cd19b8750014803084888888800c8cccd5cd19b875002480288488888880108cccd5cd19b875003480208cc8848888888cc004024020dd71aba15005375a6ae84d5d1280291999ab9a3370ea00890031199109111111198010048041bae35742a00e6eb8d5d09aba2500723333573466e1d40152004233221222222233006009008300c35742a0126eb8d5d09aba2500923333573466e1d40192002232122222223007008300d357426aae79402c8cccd5cd19b875007480008c848888888c014020c038d5d09aab9e500c23263533573802402602202001e01c01a01801601426aae7540104d55cf280189aab9e5002135573ca00226ea80048c8c8c8c8cccd5cd19b875001480088ccc888488ccc00401401000cdd69aba15004375a6ae85400cdd69aba135744a00646666ae68cdc3a80124000464244600400660106ae84d55cf280311931a99ab9c00b00c00a009008135573aa00626ae8940044d55cf280089baa001232323333573466e1d400520022321223001003375c6ae84d55cf280191999ab9a3370ea004900011909118010019bae357426aae7940108c98d4cd5ce00400480380300289aab9d5001137540022244464646666ae68cdc39aab9d5002480008cd5403cc018d5d0a80118029aba135744a004464c6a66ae7002002401c0184d55cf280089baa00149924103505431001200132001355008221122253350011350032200122133350052200230040023335530071200100500400132001355007222533500110022213500222330073330080020060010033200135500622225335001100222135002225335333573466e1c005200000d00c13330080070060031333008007335009123330010080030020060031122002122122330010040031122123300100300212200212200111232300100122330033002002001482c0252210853696c6c69636f6e003351223300248920975e4c7f8d7937f8102e500714feb3f014c8766fcf287a11c10c686154fcb27500480088848cc00400c00880050581840100d87980821a001f372a1a358a2b14f5f6
      type: string
    GYTxId:
      description: Transaction id
      example: a8d75b90a052302c1232bedd626720966b1697fe38de556c617c340233688935
      type: string
    GYTxOutRef:
      example: 4293386fef391299c9886dc0ef3e8676cbdbc2c9f2773507f1f838e00043a189#1
      format: hex
      pattern: '[0-9a-fA-F]{64}#"d+'
      type: string
    GYValue:
      additionalProperties:
        type: integer
      description: 'A multi asset quantity, represented as map where each key represents
        an asset: policy ID and token name in hex concatenated by a dot.'
      example:
        ff80aaaf03a273b8f5c558168dc0e2377eea810badbae6eceefc14ef.474f4c44: 101
        lovelace: 22
      type: object
    JWT:
      description: JSON web token
      type: string
    ObtainAddressParameters:
      description: Obtain user's wallet address.
      properties:
        email:
          $ref: '#/components/schemas/Email'
      required:
      - email
      type: object
    ObtainAddressResponse:
      description: User's address.
      properties:
        address:
          $ref: '#/components/schemas/GYAddressBech32'
      required:
      - address
      type: object
    SendFundsParameters:
      description: Send funds parameters.
      properties:
        email:
          $ref: '#/components/schemas/Email'
        outs:
          items:
            $ref: '#/components/schemas/BuildOut'
          type: array
        payment_key_hash:
          $ref: '#/components/schemas/GYKeyHash'
        value:
          $ref: '#/components/schemas/GYValue'
      required:
      - value
      - email
      - payment_key_hash
      - outs
      type: object
    SendFundsResponse:
      description: Send funds response.
      properties:
        transaction:
          $ref: '#/components/schemas/GYTx'
        transaction_fee:
          $ref: '#/components/schemas/GYNatural'
        transaction_id:
          $ref: '#/components/schemas/GYTxId'
      required:
      - transaction
      - transaction_id
      - transaction_fee
      type: object
    Settings:
      description: zkFold Smart Wallet Server settings.
      properties:
        collateral:
          $ref: '#/components/schemas/GYTxOutRef'
        collateral_address:
          $ref: '#/components/schemas/GYAddressBech32'
        network:
          type: string
        version:
          type: string
      required:
      - network
      - version
      - collateral
      - collateral_address
      type: object
    ZKF:
      description: Field element.
      type: integer
    ZKProofBytes:
      description: Proof bytes where bytes are represented in hexadecimal encoding.
      properties:
        a_xi_int:
          type: integer
        b_xi_int:
          type: integer
        c_xi_int:
          type: integer
        cmA_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        cmB_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        cmC_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        cmF_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        cmH1_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        cmH2_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        cmQhigh_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        cmQlow_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        cmQmid_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        cmZ1_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        cmZ2_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        f_xi_int:
          type: integer
        h1_xi'_int:
          type: integer
        h2_xi_int:
          type: integer
        l1_xi:
          $ref: '#/components/schemas/ZKF'
        proof1_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        proof2_bytes:
          $ref: '#/components/schemas/ByteStringFromHex'
        s1_xi_int:
          type: integer
        s2_xi_int:
          type: integer
        t_xi'_int:
          type: integer
        t_xi_int:
          type: integer
        z1_xi'_int:
          type: integer
        z2_xi'_int:
          type: integer
      required:
      - cmA_bytes
      - cmB_bytes
      - cmC_bytes
      - cmF_bytes
      - cmH1_bytes
      - cmH2_bytes
      - cmZ1_bytes
      - cmZ2_bytes
      - cmQlow_bytes
      - cmQmid_bytes
      - cmQhigh_bytes
      - proof1_bytes
      - proof2_bytes
      - a_xi_int
      - b_xi_int
      - c_xi_int
      - s1_xi_int
      - s2_xi_int
      - f_xi_int
      - t_xi_int
      - t_xi'_int
      - z1_xi'_int
      - z2_xi'_int
      - h1_xi'_int
      - h2_xi_int
      - l1_xi
      type: object
  securitySchemes:
    api-key:
      description: API key for accessing the server's API.
      in: header
      name: api-key
      type: apiKey
info:
  contact:
    email: info@zkfold.io
    name: zkFold Technical Support
    url: https://zkfold.io/
  description: API to interact with zkFold Smart Wallet.
  license:
    name: Apache-2.0
    url: https://opensource.org/licenses/apache-2-0
  title: zkFold Smart Wallet Server API
  version: 0.0.1
openapi: 3.0.0
paths:
  /v0/settings:
    get:
      description: Get server settings such as network and version.
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
        '401':
          description: Unauthorized access - API key missing
        '403':
          description: Forbidden - The API key does not have permission to perform
            the request
        '500':
          description: Internal server error
      security:
      - api-key: []
      summary: Server settings
      tags:
      - Settings
  /v0/tx/submit:
    post:
      description: Submits the given transaction to the network.
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/GYTx'
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GYTxId'
          description: ''
        '400':
          description: Invalid `body`
        '401':
          description: Unauthorized access - API key missing
        '403':
          description: Forbidden - The API key does not have permission to perform
            the request
        '500':
          description: Internal server error
      security:
      - api-key: []
      summary: Submit a transaction
      tags:
      - Tx
  /v0/wallet/address:
    post:
      description: Obtain address of the wallet initialized with the given mail.
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ObtainAddressParameters'
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ObtainAddressResponse'
          description: ''
        '400':
          description: Invalid `body`
        '401':
          description: Unauthorized access - API key missing
        '403':
          description: Forbidden - The API key does not have permission to perform
            the request
        '500':
          description: Internal server error
      security:
      - api-key: []
      summary: Obtain address.
      tags:
      - Wallet
  /v0/wallet/create:
    post:
      description: Create zk smart wallet.
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateWalletParameters'
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreateWalletResponse'
          description: ''
        '400':
          description: Invalid `body`
        '401':
          description: Unauthorized access - API key missing
        '403':
          description: Forbidden - The API key does not have permission to perform
            the request
        '500':
          description: Internal server error
      security:
      - api-key: []
      summary: Create wallet.
      tags:
      - Wallet
  /v0/wallet/send-funds:
    post:
      description: Send funds from a zk based wallet to a given address.
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SendFundsParameters'
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SendFundsResponse'
          description: ''
        '400':
          description: Invalid `body`
        '401':
          description: Unauthorized access - API key missing
        '403':
          description: Forbidden - The API key does not have permission to perform
            the request
        '500':
          description: Internal server error
      security:
      - api-key: []
      summary: Send funds.
      tags:
      - Wallet
tags:
- description: Endpoint to get server settings such as network and version
  name: Settings
- description: Endpoint to interact with zk-wallet
  name: Wallet
- description: Endpoint to interact with built transactions
  name: Tx
